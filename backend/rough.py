from datetime import datetime, timedelta

import pandas as pd
import yfinance as yf
import time
# from nifty_50_tickers import tickers
# tickers = ['INFY',]
nifty_50_tickers = ['TATAMOTORS', 'HCLTECH', 'INDUSINDBK', 'TATACONSUM', 'NESTLEIND', 'MARUTI', 'SUNPHARMA', 'TCS', 'CIPLA', 'BAJAJFINSV', 'HEROMOTOCO', 'APOLLOHOSP', 'POWERGRID', 'UPL', 'ONGC', 'BAJFINANCE', 'HINDUNILVR', 'SBILIFE', 'BHARTIARTL', 'LT', 'COALINDIA', 'NTPC', 'BRITANNIA', 'ULTRACEMCO',
           'TITAN', 'M&M', 'HDFCLIFE', 'RELIANCE', 'BPCL', 'ASIANPAINT', 'ADANIPORTS', 'TECHM', 'ICICIBANK', 'DIVISLAB', 'TATASTEEL', 'KOTAKBANK', 'EICHERMOT', 'ITC', 'HDFCBANK', 'HINDALCO', 'JSWSTEEL', 'GRASIM', 'BAJAJ-AUTO', 'LTIM', 'DRREDDY', 'WIPRO', 'SBIN', 'INFY', 'ADANIENT', 'AXISBANK']

def calculate_time(f):
    def inner_fun(ticker_lst,no_of_stocks,file_path):
        t1 = time.time()
        f(ticker_lst,no_of_stocks,file_path)
        t2 = time.time()
        return t2-t1
    return inner_fun
    



all_nifty_tickers = ['TI', 'MRPL', 'NETWORK18', 'AGI', 'VOLTAMP', 'LALPATHLAB', 'RATEGAIN', 'GREENLAM', 'IBREALEST', 'SARDAEN', 'PAISALO', 'LXCHEM', 'JKLAKSHMI', 'BAJAJHIND', 'SUZLON', 'WOCKPHARMA', 'RBLBANK', 'APOLLOHOSP', 'JMFINANCIL', 'SPANDANA', 'PRESTIGE', 'ZOMATO', 'LICHSGFIN', 'METROPOLIS', 'CONCOR', 'PNCINFRA', 'ARVIND', 'CREDITACC', 'TORNTPOWER', 'DIVGIITTS', 'ENGINERSIN', 'ANGELONE', 'IFCI', 'ATUL', 'SOLARINDS', 'ICIL', 'SCHAEFFLER', 'DEN', 'CHENNPETRO', 'HFCL', 'SOUTHBANK', 'TV18BRDCST', 'DHANI', 'WELCORP', 'L&TFH', 'ALOKINDS', 'MOTILALOFS', 'YESBANK', 'MINDACORP', 'SAFARI', 'ASTERDM', 'POLYPLEX', 'RATNAMANI', 'LLOYDSENGG', 'GRAVITA', 'TATAMTRDVR', 'BRIGADE', 'CEATLTD', 'IRB', 'ELECTCAST', 'ADANIPOWER', 'MANAPPURAM', 'LUPIN', 'GREAVESCOT', 'CRISIL', 'CARTRADE', 'GPPL', 'TATAMOTORS', 'SUBEXLTD', 'CDSL', 'CONCORDBIO', 'DISHTV', 'CONFIPET', 'RALLIS', 'EDELWEISS', 'DATAPATTNS', 'PDSL', 'CARYSIL', 'CHOLAFIN', 'PGEL', 'HCC', 'THYROCARE', 'PRICOLLTD', 'VEDL', 'BSE', 'IRCON', 'SEQUENT', 'BHEL', 'DELTACORP', 'CIEINDIA', 'WONDERLA', 'KOLTEPATIL', 'ADANIPORTS', 'INDIANB', 'TARSONS', 'NAVNETEDUL', 'ALLCARGO', 'TIINDIA', 'SUNTV', 'KPITTECH', 'NH', 'BIOCON', 'GUJGASLTD', 'VMART', 'ETHOSLTD', 'GATEWAY', 'CENTURYPLY', 'MOL', 'DEEPAKFERT', 'TECHNOE', 'CARBORUNIV', 'HINDOILEXP', 'EIDPARRY', 'INDIAGLYCO', 'PARAS', 'NATCOPHARM', 'GLOBUSSPR', 'CHEMPLASTS', 'TITAN', 'SUNTECK', 'MEDANTA', 'HERITGFOOD', 'SHRIRAMFIN', 'EPL', 'DATAMATICS', 'DWARKESH', 'GODREJPROP', 'JKTYRE', 'DLF', 'RADICO', 'ISEC', 'EASEMYTRIP', 'ERIS', 'HINDZINC', 'RENUKA', 'JSWSTEEL', 'HEROMOTOCO', 'JINDALSTEL', 'GUFICBIO', 'BANKBARODA', 'DBL', 'IGL', 'GMDCLTD', 'SOBHA', 'NAUKRI', 'CUB', 'LATENTVIEW', 'ENDURANCE', 'HIKAL', 'JINDALSAW', 'APCOTEXIND', 'JCHAC', 'HAL', 'NCC', 'UPL', 'GANESHHOUC', 'NSLNISP', 'GPIL', 'KSCL', 'ZYDUSLIFE', 'SUNDARMFIN', 'ADANIENSOL', 'GODREJAGRO', 'BAJAJHLDNG', 'JPPOWER', 'DBCORP', 'CHOLAHLDNG', 'AAVAS', 'HINDPETRO', 'BORORENEW', 'SUNFLAG', 'FORTIS', 'DODLA', 'M&MFIN', 'OFSS', 'HUDCO', 'PTC', 'JUBLFOOD', 'HATHWAY', 'KRSNAA', 'KIMS', 'NAM-INDIA', 'RAIN', 'HGINFRA', 'AMBER', 'JAMNAAUTO', 'MAHLIFE', 'POWERGRID', 'PEL', 'GAEL', 'EMIL', 'USHAMART', 'DALMIASUG', 'UTIAMC', 'BANDHANBNK', 'TRIDENT', 'VSTTILLERS', 'TATVA', 'PNB', 'PARADEEP', 'IOC', 'NUVOCO', 'SUDARSCHEM', 'MAHSEAMLES', 'TECHM', 'LEMONTREE', 'AARTIDRUGS', 'IDFC', 'GREENPLY', 'RESPONIND', 'SONATSOFTW', 'HSCL', 'DREAMFOLKS', 'CERA', 'EICHERMOT', 'ASHOKA', 'ARVINDFASN', 'BCG', 'PFC', 'NFL', 'ADANIENT', 'GSPL', 'NIACL', 'BEPL', 'ONGC', 'ZEEL', 'IEX', 'SULA', 'CRAFTSMAN', 'COSMOFIRST', 'FDC', 'SKFINDIA', 'FINEORG', 'AVALON', 'VBL', 'PIIND', 'JINDALPOLY', 'MIDHANI', 'METROBRAND', 'ADVENZYMES', 'DOLLAR', 'AHLUCONT', 'HLEGLAS', 'APTUS', 'SUNDRMFAST', 'COALINDIA', 'WELSPUNIND', 'RTNINDIA', 'ICICIBANK', 'ADANIGREEN', 'BAJAJFINSV', 'STYLAMIND', 'ASTRAMICRO', 'JYOTHYLAB', 'LTIM', 'KNRCON', 'AARTIIND', 'BIRLACORPN', 'PHOENIXLTD', 'SAKSOFT', 'QUESS', 'MCX', 'HARSHA', 'MASFIN', 'KPRMILL', 'CAMS', 'VAIBHAVGBL', 'GRANULES', 'INDOCO', 'FSL', 'BIKAJI', 'HONAUT', 'JUBLPHARMA', 'UNIPARTS', 'TVSSCS', 'CHALET', 'RAYMOND', 'AWL', 'CAPLIPOINT', 'NYKAA', 'NAVA', 'NAVINFLUOR', 'KRBL', 'ALKYLAMINE', 'ASTEC', 'M&M', 'FEDERALBNK', 'JKIL', 'BSOFT', 'SBIN', 'TITAGARH', 'SUNPHARMA', 'INFY', 'VINATIORGA', 'PTCIL', 'GMRINFRA', 'RUPA', 'LUXIND', 'TEGA', 'GODFRYPHLP', 'GMMPFAUDLR', 'MARKSANS', 'LAURUSLABS', 'ABCAPITAL', 'SIYSIL', 'TIRUMALCHM', 'FUSION', 'IRCTC', 'GAIL', 'NEWGEN', 'MUTHOOTFIN', 'JSL', 'IBULHSGFIN', 'SHILPAMED', 'HOMEFIRST', 'BAYERCROP', 'HINDALCO', 'TATAELXSI', 'THERMAX', 'DCAL', 'ECLERX', 'ABB', 'BAJAJCON', 'CANFINHOME', 'POWERMECH', 'GILLETTE', 'OIL', 'AETHER', 'DELHIVERY', 'CENTRALBK', 'HDFCBANK', 'TRIVENI', 'JISLJALEQS', 'HEIDELBERG', 'RAMKY', 'OPTIEMUS', 'ZENSARTECH', 'ORIENTCEM', 'OBEROIRLTY', 'ORIENTELEC', 'GATI', 'ACCELYA', 'SUMICHEM', 'BPCL', 'SHARDACROP', 'PNBHOUSING', 'TTML', 'TVSMOTOR', 'REDINGTON', 'RTNPOWER', 'SCI', 'JBCHEPHARM', 'JSWENERGY', 'J&KBANK', 'INDIGOPNTS', 'HNDFDS', 'MFSL', 'HGS', 'FACT', 'ABFRL', 'NATIONALUM', 'GODREJCP', 'JBMA', 'NESCO', 'JAICORPLTD', 'HDFCLIFE', 'NBCC', 'JKCEMENT', 'SWSOLAR', 'BLUEDART', 'DCMSHRIRAM', 'UJJIVANSFB', 'GLAXO', 'BDL', 'MOTHERSON', 'SCHNEIDER', 'BLS', 'PATANJALI', 'GRAPHITE', 'ATGL', 'TCIEXP', 'CMSINFO', 'NTPC', 'CANBK', 'CAMLINFINE', 'RKFORGE', 'MTARTECH', 'FLUOROCHEM', 'BARBEQUE', 'MPHASIS', 'FIEMIND', 'TATAINVEST', 'TCI', 'TIMKEN', 'BHARATFORG', 'NLCINDIA', 'ESABINDIA', 'WSTCSTPAPR', 'MSUMI', 'GOCOLORS', 'EVEREADY', 'SBCL', 'ASHOKLEY', 'RCF', 'BHARTIARTL', 'IIFL', 'RAJRATAN', 'GRINDWELL', 'KTKBANK', 'VTL', 'AVANTIFEED', 'HAPPSTMNDS', 'ACE', 'GICRE', 'MASTEK', 'PETRONET', 'TCNSBRANDS', 'RPOWER', 'RELIGARE', 'DIVISLAB', 'GABRIEL', 'RBA', 'SBICARD', 'PRINCEPIPE', 'UCOBANK', 'SHREECEM', 'ASIANPAINT', 'VIPIND', 'CESC', 'AEGISCHEM', 'ANANDRATHI', 'WABAG', 'DALBHARAT', 'WELENT', 'NRBBEARING', 'SYMPHONY', 'BRITANNIA', 'ISGEC', 'BANKINDIA', 'CAMPUS', 'MRF', 'FCL', 'BAJAJ-AUTO', 'AUBANK', 'ZYDUSWELL', 'UFLEX', 'IDBI', 'GLAND', 'EPIGRAL', 'SAIL', 'TORNTPHARM', 'PRUDENT', 'IONEXCHANG', 'JKPAPER', 'MAPMYINDIA', 'LICI', 'RAILTEL', 'CGCL', 'INDUSINDBK', 'HCG', 'BECTORFOOD', 'VGUARD', 'LANDMARK', 'MHRIL', 'SIS', 'ITC', 'MAHLOG', 'PERSISTENT', 'HINDUNILVR', 'PRAJIND', 'ARE&M', 'GRASIM', 'DABUR', 'ALKEM', 'GNFC', 'SWANENERGY', 'TIIL', 'GUJALKALI', 'IOB', 'JWL', 'PFIZER', 'KARURVYSYA', 'SUPRIYA', 'IDFCFIRSTB', 'ITDCEM', 'RVNL', 'AUROPHARMA', 'CARERATING', 'TEJASNET', 'HAVELLS', 'CIPLA', 'SHYAMMETL', 'MEDPLUS', 'BEL', 'BALAMINES', 'ROLEXRINGS', 'PRSMJOHNSN', 'INGERRAND', 'ACC', 'LTTS', 'TATACHEM', 'MAYURUNIQ', 'BLUESTARCO', 'LT', 'SBFC', 'TATACOMM', 'ULTRACEMCO', 'OLECTRA', 'MAITHANALL', 'GODREJIND', 'APOLLOTYRE', 'BEML', 'TANLA', 'TCS', 'RELIANCE', 'IKIO', 'AXISBANK', 'SPLPETRO', 'GLENMARK', 'ELECON', 'RECLTD', 'SRF', 'AIAENG', 'VENKEYS', 'TIPSINDLTD', 'WIPRO', 'VARROC', 'MAHABANK', 'KAYNES', 'COFORGE', 'STARHEALTH', 'COROMANDEL', 'MCDOWELL-N', 'ZENTEC', 'BOSCHLTD', 'INDIACEM', 'NAZARA', 'GRSE', 'CENTURYTEX', 'APLLTD', 'GSFC', 'BALMLAWRIE', 'SOMANYCERA', 'IPCALAB', 'PVRINOX', 'HCLTECH', 'VIJAYA', 'CROMPTON', 'CHOICEIN', 'EIHOTEL', 'PCBL', 'POLICYBZR', 'IFBIND', 'JUBLINGREA', 'SYNGENE', 'GRINFRA', 'ANANTRAJ', 'STARCEMENT', 'TIMETECHNO', 'JUSTDIAL', 'LAXMIMACH', 'PIDILITIND', 'ROUTE', 'GESHIP', 'WESTLIFE', 'BAJFINANCE', 'TATAPOWER', 'DEVYANI', 'HEMIPROP', 'INOXWIND', 'DMART', 'MARUTI', 'SUPRAJIT', 'FIVESTAR', 'STYRENIX', 'TATACONSUM', 'VOLTAS', 'TEAMLEASE', 'GHCL', 'ASTRAL', 'VRLLOG', 'STLTECH', 'BALRAMCHIN', 'DBREALTY', 'BALKRISIND', 'VESUVIUS', 'BATAINDIA', 'INTELLECT', 'DEEPAKNTR', 'NEULANDLAB', 'AMIORG', 'TATASTEEL', 'DCBBANK', 'AJANTPHARM', 'KIRIINDUS', 'RAINBOW', 'NESTLEIND', 'POLYMED', 'GLS', 'FINOPB', 'UBL', 'LINDEINDIA', 'ABBOTINDIA', 'PRIVISCL', 'KOTAKBANK', 'KFINTECH', 'UJJIVAN', 'PPLPHARMA', 'KANSAINER', 'ELGIEQUIP', 'MANYAVAR', 'ITI', 'IMFA', 'TMB', 'NEOGEN', 'HINDCOPPER', 'LODHA', 'HEG', 'SANSERA', 'KAJARIACER', 'NHPC', 'INDHOTEL', 'LAOPALA', 'TATAMETALI', 'AFFLE', 'ASTRAZEN', 'APARINDS', 'TTKPRESTIG', 'SONACOMS', 'ICICIPRULI', 'IOLCP', 'MAZDOCK', 'TINPLATE', 'SAREGAMA', 'HDFCAMC', 'SPARC', 'FINCABLES', 'ANURAS', 'SHOPERSTOP', 'KEI', 'UNOMINDA', 'RAMCOCEM', 'INFIBEAM', 'CCL', 'AARTIPHARM', 'MMTC', 'MOIL', 'LGBBROSLTD', 'PGHL', 'COCHINSHIP', 'FINPIPE', 'MSTCLTD', 'DRREDDY', 'SIEMENS', 'PAYTM', 'SHAREINDIA', 'INDIGO', 'MGL', 'TIDEWATER', 'CUMMINSIND', 'UNIONBANK', 'CHAMBLFERT', 'EXIDEIND', 'TRITURBINE', 'GARFIBRES', 'TRENT', 'RAJESHEXPO', 'TDPOWERSYS', 'SAPPHIRE', 'RITES', 'KPIL', 'PAGEIND', 'NMDC', 'SSWL', 'AMBUJACEM', 'PGHH', 'EMAMILTD', 'RHIM', 'SJVN', 'HBLPOWER', 'SHANTIGEAR', 'AUTOAXLES', 'POLYCAB', 'MANKIND', 'SANOFI', 'RELINFRA', 'KIRLOSBROS', 'CASTROLIND', 'ZFCVINDIA', 'BERGEPAINT', 'JTLIND', 'RELAXO', 'SUVENPHAR', 'ICICIGI', 'MOLDTKPAC', 'POWERINDIA', 'POONAWALLA', 'ESCORTS', 'MARICO', 'ROSSARI', 'UNICHEMLAB', 'EQUITASBNK', 'KEC', 'GALAXYSURF', 'MANINFRA', 'IDEA', 'CGPOWER', 'CLEAN', 'IRFC', 'SBILIFE', 'DCXINDIA', 'HIL', 'CYIENT', '3MINDIA', 'CSBBANK', 'CIGNITITEC', 'APLAPOLLO', 'GREENPANEL', 'PSPPROJECT', 'KKCL', 'BBTC', 'WHIRLPOOL', 'KIRLPNU', 'APOLLOPIPE', 'KALYANKJIL', 'ACI', 'INDIAMART', 'THOMASCOOK', 'ASAHIINDIA', 'JINDWORLD', 'COLPAL', 'DAAWAT', 'MAXHEALTH', 'GET&D', 'INDUSTOWER', 'KSB', 'DIXON', 'BOMDYEING', 'JTEKTINDIA', 'SUPREMEIND', 'GOKEX', 'EMUDHRA', 'NOCIL', 'JPASSOCIAT', 'STAR', 'SFL', 'SURYAROSNI', '360ONE', 'SYRMA', 'KIRLOSENG', 'HINDWAREAP']


# @calculate_time
def ticker_filter(ticker_lst,no_of_stocks = None,file_path = 'D:/OneDrive/New folder_python/Djangoprojects/Turtle_trading/project_files/selected_tickers_data2.xlsx'):
    """This filters the sticker based on Turtle trading and gives you the list of filtered tickers"""
    selected_tickers = []

    end_date = datetime.now()
    start_date = end_date - timedelta(days=7)
    ticker_start_date = end_date-timedelta(weeks=13)

    # Step 1: Obtain historical stock data
    i = 0
    ticker_iter = iter(ticker_lst)
    if no_of_stocks == None:
        num = len(ticker_lst)
    else:
        num = no_of_stocks
    while i < num:
        ticker = next(ticker_iter)

        a = ticker + ".NS"      #This need to be done for accessing NSE ticker

        data = yf.download(a, start=ticker_start_date, end=end_date)

        if data.empty:
            print(f"No data available for {ticker}.")
        else:

        # Step 3: Calculate highest high and lowest low
            data['highest_high'] = data['High'].shift(1).rolling(window=50).max()
            data['lowest_low'] = data['Low'].shift(1).rolling(window=20).min()

        # Step 4: Implement breakout entry rule
            data['entry_signal'] = 0
            data.loc[data['High'] > data['highest_high'],'entry_signal'] = 1  # Long entry
            data.loc[data['Low'] < data['lowest_low'],'entry_signal'] = -1  # Short entry

            # Select the last 7 rows (last 7 days) for processing
            last_7_days_data = data.iloc[-7:]

            for index, row in last_7_days_data.iterrows():
                if start_date <= index <= end_date and row['entry_signal'] == 1:            
                    # Step 2: Preprocess the data (if needed)
                    data['High - Low'] = data['High'] - data['Low']
                    data['High - PDC'] = data['High'] - data['Close'].shift(1)
                    data['PDC - Low'] = data['Close'].shift(1) - data['Low']
                    data['True Range'] = data[['High - Low','High - PDC', 'PDC - Low']].max(axis=1)

                    selected_tickers.append(ticker)

                    # Create a Pandas Excel writer
                    with pd.ExcelWriter(file_path, engine='openpyxl', mode='a', if_sheet_exists='replace') as writer:

                        # Write data to a new sheet named after the ticker symbol
                        data.to_excel(writer, sheet_name=ticker, index=True)
                    break
        i += 1
    return selected_tickers
# print(nifty_50_tickers.index('INDUSINDBK'))


# print(ticker_filter(all_nifty_tickers,file_path=r"D:\OneDrive\New folder_python\Djangoprojects\Turtle_trading\project_files\50-days.xlsx",no_of_stocks=751))

all_selected_tickers = ['TI', 'VOLTAMP', 'LALPATHLAB', 'RATEGAIN', 'GREENLAM', 'PAISALO', 'JKLAKSHMI', 'BAJAJHIND', 'SPANDANA', 'ARVIND', 'CREDITACC', 'ANGELONE', 'SOLARINDS', 'ICIL', 'MOTILALOFS', 'GRAVITA', 'ELECTCAST', 'ADANIPOWER', 'CDSL', 'PDSL', 'BSE', 'WONDERLA', 'TIINDIA', 'KPITTECH', 'MEDANTA', 'DATAMATICS', 'JKTYRE', 'DLF', 'RADICO', 'JINDALSAW', 'JPPOWER', 'EMIL', 'IOC', 'MAHSEAMLES', 'SONATSOFTW', 'DREAMFOLKS', 'PFC', 'ZEEL', 'CRAFTSMAN', 'WELSPUNIND', 'MCX', 'KPRMILL', 'BSOFT', 'TEGA', 'GODFRYPHLP', 'MUTHOOTFIN', 'OBEROIRLTY', 'BPCL', 'TVSMOTOR', 'FACT', 'PATANJALI', 'CMSINFO', 'CANBK', 'NLCINDIA', 'ESABINDIA', 'ACE', 'ANANDRATHI', 'WABAG', 'INDUSINDBK', 'HCG', 'PERSISTENT', 'ALKEM', 'GNFC', 'SWANENERGY', 'PRSMJOHNSN', 'ELECON', 'RECLTD', 'AIAENG', 'HCLTECH', 'VIJAYA', 'ANANTRAJ', 'TIMETECHNO', 'VESUVIUS', 'AJANTPHARM', 'POLYMED', 'FINOPB', 'PRIVISCL', 'PPLPHARMA', 'LODHA', 'SPARC', 'ANURAS', 'LGBBROSLTD', 'SHAREINDIA', 'TRENT', 'SANOFI', 'RELAXO', 'MOLDTKPAC', 'UNICHEMLAB', 'GALAXYSURF', 'IDEA', 'SBILIFE', 'CIGNITITEC', 'THOMASCOOK', 'COLPAL', 'DAAWAT', 'JPASSOCIAT']
print(len(all_selected_tickers))

p = ['TI', 'LALPATHLAB', 'RATEGAIN', 'GREENLAM', 'PAISALO', 'JKLAKSHMI', 'BAJAJHIND', 'SUZLON', 'SPANDANA', 'ZOMATO', 'ARVIND', 'CREDITACC', 'TORNTPOWER', 'ANGELONE', 'SOLARINDS', 'ICIL', 'CHENNPETRO', 'L&TFH', 'MOTILALOFS', 'RATNAMANI', 'GRAVITA', 'TATAMTRDVR', 'BRIGADE', 'ELECTCAST', 'CDSL', 'PDSL', 'CARYSIL', 'BSE', 'WONDERLA', 'KOLTEPATIL', 'KPITTECH', 'MEDANTA', 'DATAMATICS', 'GODREJPROP', 'JKTYRE', 'DLF', 'RADICO', 'JINDALSAW', 'JPPOWER', 'AMBER', 'EMIL', 'IOC', 'MAHSEAMLES', 'SONATSOFTW', 'DREAMFOLKS', 'PFC', 'WELSPUNIND', 'MCX', 'KPRMILL', 'BSOFT', 'GODFRYPHLP', 'MARKSANS', 'MUTHOOTFIN', 'OBEROIRLTY', 'TVSMOTOR', 'FACT', 'PATANJALI', 'CMSINFO', 'CANBK', 'ESABINDIA', 'ACE', 'ANANDRATHI', 'WABAG', 'INDUSINDBK', 'PERSISTENT', 'ALKEM', 'GNFC', 'SWANENERGY', 'PRSMJOHNSN', 'BLUESTARCO', 'RECLTD', 'VIJAYA', 'ANANTRAJ', 'TIMETECHNO', 'PPLPHARMA', 'LODHA', 'SHAREINDIA', 'TRENT', 'SANOFI', 'RELAXO', 'GALAXYSURF', 'IDEA', 'CIGNITITEC', 'THOMASCOOK', 'COLPAL', 'DAAWAT', 'JPASSOCIAT']
print(len(p))

